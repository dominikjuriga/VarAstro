@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient HttpClient
@using Blazored.LocalStorage
@using System.Net.Http.Headers

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <h3>Whoops, you are not allowed to see this page.</h3>
                    <h5>Please <a href="/login">login</a> or <a href="/register">register</a> an account.</h5>
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code
{
    protected override async Task OnInitializedAsync()
    {
        if (await LocalStorageService.ContainKeyAsync("bearerToken"))
        {
            var savedToken = await LocalStorageService.GetItemAsync<string>("bearerToken");

            await ((AppAuthStateProvider)AuthenticationStateProvider).LogIn();

            HttpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", savedToken);

            StateHasChanged();
        }
    }
}