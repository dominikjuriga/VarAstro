@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorageService


<MudThemeProvider Theme="Theme" @bind-IsDarkMode="IsDarkMode"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(e => DrawerToggle())"/>
        Var Astro
    </MudAppBar>
    <MudDrawer @bind-Open="@DrawerOpen" Class="text-center">
        <CustomNavMenu/>
        <div class="d-flex align-items-center justify-content-center">
            <MudIcon Icon="@Icons.Filled.LightMode"/>
            <MudSwitch @bind-Checked="IsDarkMode" Color="Color.Primary" Class="ma-4" T="bool"/>
            <MudIcon Icon="@Icons.Filled.DarkMode"/>
        </div>

    </MudDrawer>
    <MudMainContent>
        <MudContainer Class="mt-5">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    private MudTheme Theme { get; } = new();

    private bool IsDarkMode { get; set; } = true;

    private bool DrawerOpen { get; set; } = true;

    void DrawerToggle()
    {
        DrawerOpen = !DrawerOpen;
    }

    // private async Task SaveToLocalStorage(bool value)
    // {
    //     await LocalStorageService.SetItemAsync(Keywords.DarkMode, value);
    // }

    // protected override async Task OnInitializedAsync()
    // {
    //     var item = await LocalStorageService.ContainKeyAsync(Keywords.DarkMode);
    //     if (item)
    //     {
    //         IsDarkMode = item;
    //     }
    // }

}