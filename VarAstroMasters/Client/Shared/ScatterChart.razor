@using ChartJs.Blazor.ScatterChart
@using System.Text.Json
@using System.Collections
@using ChartJs.Blazor.Common.Axes.Ticks
@using ChartJs.Blazor.LineChart
@using ChartJs.Blazor.Util
@using ChartJs.Blazor.PolarAreaChart
@using Microsoft.Extensions.Options

<Chart Config="_config"></Chart>

@code {

    [Parameter]
    public string values { get; set; }

    private ScatterConfig _config;

    protected override void OnInitialized()
    {
        _config = new ScatterConfig
        {
            Options = new LineOptions()
            {
                Responsive = true,
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Svetelná krivka"
                },
                Scales = new Scales
                {
                    YAxes = new List<CartesianAxis>
                    {
                        new LinearCartesianAxis
                        {
                            Ticks = new LinearCartesianTicks()
                            {
                                Reverse = true
                            }
                        }
                    }
                }
            }
        };
        List<Point> points = new();
        var vals = JsonSerializer.Deserialize<List<List<double>>>(values);
        foreach (var val in vals)
        {
            points.Add(new Point(val[0], val[1]));
        }
        var dataset = new LineDataset<Point>
        {
            Label = "Mag"
        };
        var dataset2 = new LineDataset<Point>
        {
            Label = "Mag2"
        };
        foreach (var point in points)
        {
            var pt = new Point(point.X, point.Y + 0.1);
            dataset2.Add(pt);
        }
        foreach (var point in points)
        {
            dataset.Add(point);
        }
        _config.Data.Datasets.Add(dataset);
        _config.Data.Datasets.Add(dataset2);
    }

}