@page "/LightCurves/{LightCurveId:int}"
@using Newtonsoft.Json
@inject ILightCurveService LightCurveService

@if (_curve is null)
{
    <h3>Prebieha načítanie..</h3>
}
else
{
    <h3>
        Detail krivky (hviezda
        <strong>
            <a href="@Endpoints.ClientStarGetSingle/@_curve.Star.Id">@_curve.Star.Name</a>
        </strong>)
    </h3>

    <section>
        <div class="table-responsive">
            <table class="table">
                <tbody>
                <tr>
                    <th scope="row">Autor</th>
                    <td>@_curve.User.Name</td>
                </tr>
                <tr>
                    <th scope="row">RA</th>
                    <td>@_starRa</td>
                </tr>
                <tr>
                    <th scope="row">DEC</th>
                    <td>@_starDec</td>
                </tr>
                <tr>
                    <th scope="row">Hvezdáreň</th>
                    <td>@(_curve.Observatory is null ? "Nešpecifikovaná" : _curve.Observatory.Address)</td>
                </tr>
                <tr>
                    <th scope="row">Zariadenie</th>
                    <td>@(_curve.Device is null ? "Nešpecifikované" : _curve.Device.Name)</td>
                </tr>
                <tr>
                    <th scope="row">Pridané</th>
                    <td>@_curve.DateCreated.ToString(@Keywords.DefaultDateTimeFormat)</td>
                </tr>
                </tbody>
            </table>
        </div>
    </section>


    @if (_values is not null)
    {
        <section>
            <ScatterChart Values="@_values"></ScatterChart>
        </section>
    }
}

@code {

    [Parameter]
    public int LightCurveId { get; set; }

    private LightCurveDTO? _curve { get; set; } = null;
    private string? _values { get; set; } = string.Empty;
    private string _starRa = "-";
    private string _starDec = "-";
    private Dictionary<string, string>? _meta = null;

    protected override async Task OnInitializedAsync()
    {
        _curve = await LightCurveService.GetLightCurve(LightCurveId);
        var sc = _curve.Star.StarCatalogs.Where(c => c.Primary).FirstOrDefault();
        if (sc is not null)
        {
            _starRa = $"{sc.Ra} ({sc.CatalogId})";
            _starDec = $"{sc.Dec} ({sc.CatalogId})";
        }
        else
        {
            if (_curve.Meta is not null)
            {
                _starRa = $"{_curve.Meta.GetValueOrDefault("RA", "-")} (fotometria)";
                _starDec = $"{_curve.Meta.GetValueOrDefault("DEC", "-")} (fotometria)";
            }
        }
        _values = await LightCurveService.GetLightCurveValues(LightCurveId);
    }

}