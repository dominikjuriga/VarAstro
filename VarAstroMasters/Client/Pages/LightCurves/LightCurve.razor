@page "/LightCurves/{LightCurveId:int}"
@inject ILightCurveService LightCurveService

@if (_curve is null)
{
    <h3>Prebieha načítanie..</h3>
}
else
{
    <h3>
        Detail krivky (hviezda
        <strong>
            <a href="@Endpoints.ClientStarGetSingle/@_curve.Star.Id">@_curve.Star.Name</a>
        </strong>)
    </h3>

    <table class="table">
        <tbody>
        <tr>
            <th scope="row">Autor</th>
            <td>@_curve.User.Name</td>
        </tr>
        <tr>
            <th scope="row">RA</th>
            <td>05:48:23.959</td>
        </tr>
        <tr>
            <th scope="row">DEC</th>
            <td>+30:57:03.94</td>
        </tr>
        <tr>
            <th scope="row">Hvezdáreň</th>
            <td>Brno 42</td>
        </tr>
        <tr>
            <th scope="row">Zariadenie</th>
            <td>teleskop 4000mm</td>
        </tr>
        </tbody>
    </table>

    @if (_values is not null)
    {
        <ExampleChart Values="@_values"></ExampleChart>
    }
}

@code {

    [Parameter]
    public int LightCurveId { get; set; }

    private LightCurveDTO? _curve { get; set; } = null;
    private string _values { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        _curve = await LightCurveService.GetLightCurve(LightCurveId);
        _values = await LightCurveService.GetLightCurveValues(LightCurveId);
    }

}