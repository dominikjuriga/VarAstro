@page "/Admin/Stars/{StarId:int}/Publication"
@inject IStarService StarService
@inject NavigationManager NavigationManager
<h3>
    Publikácia hviezdy
    @if (_starPublication is {StarName: not null, StarName: {Length: > 0}})
    {
        <span> - @_starPublication.StarName</span>
    }
</h3>

@if (_starPublication is null)
{
    <Loader/>
}
else
{
    @if (_message is not null)
    {
        <Alert type="@_messageType">
            @_message
        </Alert>
    }
    <EditForm Model="_starPublication" OnValidSubmit="HandleSubmit">
        <div class="my-3">
            <label for="discoverer" class="form-label">
                Objaviteľ
            </label>
            <InputText id="discoverer" @bind-Value="_starPublication.Discoverer" class="form-control"></InputText>
            <ValidationMessage For="@(() => _starPublication.Discoverer)"/>
        </div>

        <div class="my-3">
            <label for="year" class="form-label">
                Rok
            </label>
            <InputNumber id="year" @bind-Value="_starPublication.Year" class="form-control"></InputNumber>
            <ValidationMessage For="@(() => _starPublication.Year)"/>
        </div>

        <div class="my-3">
            <label for="link" class="form-label">
                Odkaz na publikáciu
            </label>
            <InputText id="link" @bind-Value="_starPublication.PublicationLink" class="form-control"></InputText>
            <ValidationMessage For="@(() => _starPublication.PublicationLink)"/>
        </div>

        <button type="submit" class="btn btn-primary btn-lg">Uložiť publikáciu</button>
        <button type="button" class="btn btn-secondary btn-lg" @onclick="GoBack">Späť na prehľad</button>
    </EditForm>
}

@code {

    [Parameter]
    public int StarId { get; set; }

    private StarPublish _starPublication { get; set; }
    private string? _message { get; set; }
    private string? _messageType { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await StarService.GetPublication(StarId);
        if (response.Success)
        {
            if (response.Data is null)
            {
                _starPublication = new StarPublish();
            }
            else
            {
                _starPublication = response.Data;
            }
        }
    }

    private async Task HandleSubmit()
    {
        if (_starPublication.StarId is -1)
        {
            _starPublication.StarId = StarId;
        }
        var response = await StarService.SavePublication(_starPublication);
        _message = response.Message;
        _messageType = response.Success ? Keywords.AlertSuccess : Keywords.AlertDanger;
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo($"{Endpoints.ClientStarGetSingle}/{StarId}");
    }

}