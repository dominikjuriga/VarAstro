@page "/Admin/Stars/{StarId:int}/Publication"
@inject IStarService StarService
@inject NavigationManager NavigationManager

@if (StarPublish is null)
{
    <Loader/>
}
else
{
    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h3">Publikácia hviezdy @StarPublish.StarName</MudText>
        </MudCardHeader>
        <MudCardContent>
            @if (Message is not null)
            {
                <MudAlert Severity="@MessageSeverity">@Message</MudAlert>
            }
            <EditForm Model="StarPublish" OnValidSubmit="HandleSubmit">
                <MudTextField class="mb-5" @bind-Value="StarPublish.Discoverer" Label="Objaviteľ" Variant="Variant.Filled" For="@(() => StarPublish.Discoverer)"/>
                <MudNumericField class="mb-5" @bind-Value="StarPublish.Year" Label="Rok objavenia" Variant="Variant.Filled" For="@(() => StarPublish.Year)"/>
                <MudTextField class="mb-5" @bind-Value="StarPublish.PublicationLink" Label="Odkaz na publikáciu" Variant="Variant.Filled" For="@(() => StarPublish.PublicationLink)"/>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit">Uložiť publikáciu</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="GoBack">Späť na hviezdu</MudButton>
            </EditForm>
        </MudCardContent>
    </MudCard>
}

@code {

    [Parameter]
    public int StarId { get; set; }

    private StarPublish? StarPublish { get; set; }
    private string? Message { get; set; }
    private Severity MessageSeverity { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await StarService.GetPublication(StarId);
        if (response.Success)
        {
            if (response.Data is null)
            {
                StarPublish = new StarPublish();
            }
            else
            {
                StarPublish = response.Data;
            }
        }
    }

    private async Task HandleSubmit()
    {
        if (StarPublish.StarId is -1)
        {
            StarPublish.StarId = StarId;
        }
        var response = await StarService.SavePublication(StarPublish);
        Message = response.Message;
        MessageSeverity = response.Success ? Severity.Success : Severity.Error;
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo($"{Endpoints.ClientStarSingleGet}/{StarId}");
    }

}