@page "/Admin/Catalogs"
@inject IStarService StarService
<div class="d-flex justify-content-between">
    <h3>Správa katalógov</h3>
    <div>
        <button class="btn btn-primary" @onclick="NewCatalog">Pridať katalóg</button>
        @if (_editCatalog is not null)
        {
            <button class="btn btn-primary" @onclick="CancelEdit">Späť na prehľad</button>
        }
    </div>
</div>

@if (_catalogs is null)
{
    <Loader/>
}
else
{
    @if (_message is not null)
    {
        <Alert type="@_messageType">
            @_message
        </Alert>
    }
    <section>
        @if (_editCatalog is not null)
        {
            <EditForm Model="_editCatalog">
                <div class="my-3">
                    <label for="name" class="form-label">
                        Názov katalógu
                    </label>
                    <InputText id="name" @bind-Value="_editCatalog.Name" class="form-control"></InputText>
                    <ValidationMessage For="@(() => _editCatalog.Name)"/>
                </div>

                <button class="btn btn-primary" type="submit" @onclick="SaveEdit">Uložiť</button>
                <button class="btn btn-secondary" type="button" @onclick="CancelEdit">Zrušiť</button>
            </EditForm>
        }
        else
        {
            @if (_catalogToDelete is not null)
            {
                <Alert type="@Keywords.AlertInfo">
                    Naozaj chcete odstrániť katalóg @_catalogToDelete? Táto akcia je nevratná a zmaže všetky pridružené záznamy (identifikácia hviezd v katalógu)! <br/>
                    <button class="btn btn-danger my-3" @onclick="DeleteCatalog">Áno, chcem zmazať katalóg</button><br/>
                    <button class="btn btn-secondary" @onclick="CancelDelete">Nie, zrušiť akciu</button>
                </Alert>
            }
            if (_catalogs.Count > 0)
            {
                <ResponsiveTable>
                    <thead>
                    <tr>
                        <th>Katalóg</th>
                        <th>Akcie</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var catalog in _catalogs)
                    {
                        <tr>
                            <td>@catalog.Name</td>
                            <td>
                                <button title="Budete vyzvaný k potvrdeniu akcie" class="btn btn-primary" @onclick="() => ConfirmDeleteCatalog(catalog.Name)">Zmazať</button>
                                @* <button class="btn btn-primary" @onclick="() => EditCatalog(catalog)">Upraviť</button> *@
                            </td>
                        </tr>
                    }
                    </tbody>
                </ResponsiveTable>
            }
            else
            {
                <p>Systém neobsahuje žiadne katalógy.</p>
            }
        }
    </section>
}

@code {
    private List<Catalog>? _catalogs { get; set; }
    private CatalogEdit? _editCatalog { get; set; }
    private string? _message { get; set; }
    private string? _messageType { get; set; }
    private string? _catalogToDelete { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await StarService.CatalogListGet();
        if (response.Success)
        {
            _catalogs = response.Data;
        }
    }

    private void NewCatalog()
    {
        SetMessage();
        _editCatalog = new CatalogEdit();
    }

    private void EditCatalog(Catalog catalog)
    {
        _editCatalog = new CatalogEdit
        {
            Name = catalog.Name,
            OriginalName = catalog.Name,
            New = false
        };
    }

    private async Task SaveEdit()
    {
        var response = await StarService.CatalogPost(_editCatalog);
        SetMessage(response.Message, response.Success ? Keywords.AlertSuccess : Keywords.AlertDanger);
        if (response is {Success: true, Data: not null} && _catalogs is not null)
        {
            if (_editCatalog.New)
            {
                _catalogs.Add(new Catalog { Name = response.Data.Name });
            }
            else
            {
                var cat = _catalogs.Where(c => c.Name == _editCatalog.OriginalName).FirstOrDefault();
                if (cat is not null)
                {
                    _catalogs.Remove(cat);
                    _catalogs.Add(response.Data);
                }
            }
        }
    }

    private void ConfirmDeleteCatalog(string catalogName)
    {
        _catalogToDelete = catalogName;
    }

    private void CancelDelete()
    {
        _catalogToDelete = null;
    }

    private async Task DeleteCatalog()
    {
        if (_catalogToDelete is null)
        {
            return;
        }
        SetMessage();
        var response = await StarService.CatalogDelete(_catalogToDelete);
        if (response.Success)
        {
            _catalogs = _catalogs.Where(c => c.Name != _catalogToDelete).ToList();
            _catalogToDelete = null;
        }
        SetMessage(response.Message, response.Success ? Keywords.AlertSuccess : Keywords.AlertDanger);
    }

    private void CancelEdit()
    {
        _editCatalog = null;
    }

    private void SetMessage(string? message = null, string type = "success")
    {
        _message = message;
        _messageType = type;
    }

}