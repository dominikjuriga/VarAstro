@page "/login"
@inject IAuthService AuthService
@inject ILocalStorageService LocalStorageService
@inject HttpClient HttpClient
@inject AppAuthStateProvider AuthStateProvider 

<PageTitle>Prihlásenie | @Keywords.DefaultPageTitle</PageTitle>

<AuthorizeView Context="authContext">
    <NotAuthorized>
        @if (!Succeeded)
        {
            <MudCard>
                <EditForm Model="UserLogin" OnValidSubmit="HandleLogin" Context="formContext">
                    <MudCardContent>
                        <MudText>Prihlásenie</MudText>
                        <DataAnnotationsValidator/>
                        <MudTextField @bind-Value="UserLogin.EmailAddress" Label="Email" For="@(() => UserLogin.EmailAddress)"/>
                        <MudTextField @bind-Value="UserLogin.Password" Label="Heslo" For="@(() => UserLogin.Password)" InputType="InputType.Password"/>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Prihlásiť sa</MudButton>
                    </MudCardActions>

                </EditForm>
            </MudCard>
        }
        else
        {
            <MudAlert Severity="Severity.Success">Prihlásenie prebehlo úspešne.</MudAlert>
        }
    </NotAuthorized>
    <Authorized>
        <MudAlert Severity="Severity.Info">Už ste prihlásený.</MudAlert>
    </Authorized>
</AuthorizeView>


@code {
    private UserLogin UserLogin { get; set; } = new();
    private bool Succeeded { get; set; }

    private async Task HandleLogin()
    {
        var response = await AuthService.LogIn(UserLogin);
        if (response is {Success: true })
        {
            await LocalStorageService.SetItemAsync(Keywords.JWT_Bearer_Token, response.Data);
            await AuthStateProvider.LogIn();
            HttpClient.DefaultRequestHeaders.Authorization =
                new AuthenticationHeaderValue(Keywords.Client_HTTP_Bearer_Header,
                    response.Data);
            Succeeded = true;
        }
    }

}