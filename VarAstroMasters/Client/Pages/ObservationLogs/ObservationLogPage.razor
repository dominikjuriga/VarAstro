@page "/ObservationLogs/{Id}"
@inject ILightCurveService LightCurveService

@if (Log is null)
{
    <Loader/>
}
else
{
    <h3>
        Pozorovací denník @Log.User.Name
    </h3>
    <section>
        @if (LightCurves is null)
        {
            <Loader/>
        }
        else
        {
            if (Log.Curves.Count == 0)
            {
                <p>Tento denník nemá žiadne pozorovania.</p>
            }
            else
            {
                <LightCurveListWithValues Curves="@LightCurves"/>
            }
        }
    </section>
}

@code {

    [Parameter]
    public string Id { get; set; }

    private ObservationLogDetailDTO? Log { get; set; }
    private List<LightCurveDTO>? LightCurves { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await LightCurveService.GetObservationLog(Id);
        if (response is {Success: true, Data: not null})
        {
            Log = response.Data;
            LightCurves = response.Data.Curves;
            GetValuesForCurves();
        }
    }

    private async Task GetValuesForCurves()
    {
        if (LightCurves is null) return;
        foreach (var curve in LightCurves)
        {
            if (!PublishHelper.CanShareCurve(curve.PublishVariant))
            {
                curve.ValuesFinishedLoading = true;
                continue;
            }
            var response = await LightCurveService.LightCurveSingleValuesGet(curve.Id);
            curve.ValuesFinishedLoading = true;
            if (response.Success)
            {
                curve.Values = response.Data;
                StateHasChanged();
            }
        }
    }


}